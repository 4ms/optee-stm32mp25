# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/soc/stm32/st,stm32mp25-risab.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: STM32 Resource isolation peripheral unit for address space protection
       (block-based)

maintainers:
  - Gatien Chevallier <gatien.chevallier@foss.st.com>

description: |
  The RIF (resource isolation framework) is a comprehensive set of hardware
  blocks designed to enforce and manage isolation of STM32 hardware resources,
  like memory and peripherals.
  Through RISAB registers, a trusted domain application, or the application to
  whom the page configuration has been delegated, assigns memory pages to one or
  more security domains (secure, privilege, compartment).

properties:
  compatible:
    const: st,stm32mp25-risab

  reg:
    maxItems: 1

  clocks:
    const: 1

  st,mem-map:
    $ref: /schemas/types.yaml#/definitions/uint32-array
    minItems: 2
    description:
      Defines the memory range covered by the RISAB.

  memory-region:
    minItems: 1
    maxItems: 32
    description: |
      Phandle to a node describing memory area to be configured by the RISAB.
      These regions cannot overlap. A zone must be within st,mem-map range and
      can be represented by one or more pages.

  st,srwiad:
    description: |
      When set, this bit allows secure read/write data accesses to non-secure
      blocks and pages (secure execute remains illegal).
    type: boolean

required:
  - compatible
  - reg
  - clocks
  - st,mem-map
  - memory-region

additionalProperties: false

examples:
  - |
        risab: risab@420f0000 {
          compatible = "st,stm32mp25-risab";
          reg = <0x420f0000 0x1000>;
          clocks = <&rcc CK_ICN_LS_MCU>;
          st,mem-map = <0xa000000 0x20000>;
          memory-region= <&zone1>, <&zone2>; //Zones covered by this RISAF
          st,srwiad;
        };
