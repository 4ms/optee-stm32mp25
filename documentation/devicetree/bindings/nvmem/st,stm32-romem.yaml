# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/nvmem/st,stm32-romem.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: STMicroelectronics STM32 Factory-programmed data bindings

description: |
  This represents STM32 Factory-programmed read only non-volatile area: locked
  flash, OTP, read-only HW regs... This contains various information such as:
  analog calibration data for temperature sensor (e.g. TS_CAL1, TS_CAL2),
  internal vref (VREFIN_CAL), unique device ID...

maintainers:
  - Fabrice Gasnier <fabrice.gasnier@st.com>

allOf:
  - $ref: "nvmem.yaml#"

properties:
  compatible:
    enum:
      - st,stm32f4-otp
      - st,stm32mp13-bsec
      - st,stm32mp15-bsec

  clocks:
    maxItems: 1
    description: |
      - It's not present on stm32f4.
      - It's not present on stm32mp13.
      - It's optional on stm32mp15.

patternProperties:
  "^.*@[0-9a-f]+$":
    type: object

    properties:
      st,non-secure-otp:
        description: |
          This property explicits a factory programmed area that both secure
          and non-secure worlds can access. It is needed when, by default, the
          related area can only be reached by the secure world.
          It requires to be 32 bits word aligned to allow non-secure sharing.
        type: boolean

      st,non-secure-otp-provisioning:
        description: |
          This property explicits a factory programmed area that allows a non-secure
          read and write until the first programmed value. Once the provisioning of
          the specified area is done, access from non-secure is forbidden.
          It is needed when, by default, the related area is empty and must be provisioned.
        type: boolean

required:
  - "#address-cells"
  - "#size-cells"
  - compatible
  - reg

unevaluatedProperties: false

examples:
  - |
    efuse@1fff7800 {
      compatible = "st,stm32f4-otp";
      reg = <0x1fff7800 0x400>;
      #address-cells = <1>;
      #size-cells = <1>;

      calib@22c {
        reg = <0x22c 0x2>;
      };

      mac_addr@e4 {
        reg = <0xe4 0x8>;
        st,non-secure-otp;
      };

      oem_enc_key@170 {
        reg = <0x170 0x10>;
        st,non-secure-otp-provisioning;
      };
    };

...
