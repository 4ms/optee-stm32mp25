# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/hwmon/st,stm32-tamp.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: STMicroelectronics STM32 Tamper bindings

maintainers:
  - Nicolas Toromanoff <nicolas.toromanoff@st.com>

properties:
  compatible:
    enum:
      - st,stm32-tamp
      - st,stm32mp13-tamp

  reg:
    maxItems: 1

  clocks:
    maxItems: 1

  interrupts:
    maxItems: 1

  st,tamp_passive_precharge:
    description: 0 is no precharge, so the pull-up is disabled for all external passive tamper.
       1, 2, 3, 4, 8 define the number of cycle the STM32 precharge the pin before
       checking the value (low/high) for all external tamper.
    $ref: /schemas/types.yaml#/definitions/uint32
    enum: [0, 1, 2, 4, 8]

  st,tamp_passive_nb_sample:
    description: The number of sample to read in a row to raise a passive tamper.
    $ref: /schemas/types.yaml#/definitions/uint32
    enum: [0, 2, 4, 8]

  st,tamp_passive_sample_clk_div:
    description: Clock divider to define frequency to read a sample for a passive tamper.
    $ref: /schemas/types.yaml#/definitions/uint32

  st,tamp_active_filter:
    description: Set the active tamper filtering. 0 when active tamper filtering is disabled.
      1 when active tamper filtering is enabled. A tamper event is detected when 2 comparison
      mismatches occur out of 4 consecutive samples.
    $ref: /schemas/types.yaml#/definitions/uint32
    enum: [0, 1]

  st,tamp_active_clk_div:
    description: clock divider to define the frequency of read/write cycle for all active tampers.
    $ref: /schemas/types.yaml#/definitions/uint32

  st,trig_on:
    description: Defines the active level to activate this passive tamper
      (not used if pintctrl-0 as 2 entries).
      It also depends on st,tamp_passive_precharge value. When st,tamp_passive_precharge=0
      this passive tamper activate at edge. When st,tamp_passive_precharge != 0, with st,trig_on
      defined, this passive tamper will activate if st,tamp_passive_nb_sample in a row are high.
      If not defined the passive tamper event is raised if st,tamp_passive_nb_sample in a row
      are low.
    type: boolean

patternProperties:
  "^tamp_passive@[0-9]+$":
    description: Describe the passive tamper with its allocated pinctrl.
    type: object

  "^tamp_active@[0-9]+$":
    type: object
    description:
            Describe the active tamper with its allocated pinctrl.

required:
  - compatible
  - reg
  - clocks

additionalProperties: false

examples:
  - |
    #include <dt-bindings/clock/stm32mp1-clks.h>
    #include <dt-bindings/reset/stm32mp1-resets.h>
    tamp: tamp@5c00a000 {
            compatible = "st,stm32mp13-tamp";
            reg = <0x5c00a000 0x400>;
            interrupts = <GIC_SPI 128 IRQ_TYPE_LEVEL_HIGH>;
            clocks = <&rcc RTCAPB>;
    };
...
